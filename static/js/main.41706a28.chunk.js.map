{"version":3,"sources":["assets/income.svg","assets/outcome.svg","assets/total.svg","assets/logo.svg","assets/alert.svg","services/api.ts","components/Header/styles.ts","components/Header/index.tsx","utils/formatValue.ts","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","components/FileList/styles.ts","components/FileList/index.tsx","components/Upload/styles.ts","components/Upload/index.tsx","pages/Import/styles.ts","pages/Import/index.tsx","routes/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["module","exports","api","axios","create","baseURL","Container","styled","div","size","Header","src","Logo","alt","to","formatValue","value","Intl","NumberFormat","style","currency","format","CardContainer","h1","section","Card","total","TableContainer","Dashboard","useState","transactions","setTransactions","balance","setBalance","useEffect","a","get","then","response","transactionFormated","data","map","transaction","formattedValue","formattedDate","Date","created_at","toLocaleDateString","balanceFormatted","income","outcome","loadTransactions","data-testid","key","id","className","title","type","category","ul","FileInfo","FileList","files","uploadedFile","name","readableSize","dragActive","css","dragReject","DropContainer","attrs","props","isDragActive","isDragReject","messageColors","default","error","success","UploadMessage","p","Upload","onUpload","accept","onDropAccepted","getRootProps","getInputProps","isDragRejest","renderDragMessage","Title","ImportFileContainer","Footer","shade","Import","uploadedFiles","setUploadedFiles","history","useHistory","FormData","length","file","append","post","push","console","log","uploadFiles","filesize","alert","onClick","Routes","path","exact","component","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41706a28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/income.df4567f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/outcome.bb31a5f3.svg\";","module.exports = __webpack_public_path__ + \"static/media/total.7f99c5ac.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ce269cac.svg\";","module.exports = __webpack_public_path__ + \"static/media/alert.78a343ae.svg\";","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3333',\n});\n\nexport default api;\n","import styled from 'styled-components';\n\ninterface ContainerProps {\n  size?: 'small' | 'large';\n}\n\nexport const Container = styled.div<ContainerProps>`\n  background: #5636d3;\n  padding: 30px 0;\n\n  header {\n    width: 1120px;\n    margin: 0 auto;\n    padding: ${({ size }) => (size === 'small' ? '0 20px ' : '0 20px 150px')};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    nav {\n      a {\n        color: #fff;\n        text-decoration: none;\n        font-size: 16px;\n        transition: opacity 0.2s;\n\n        & + a {\n          margin-left: 32px;\n        }\n\n        &:hover {\n          opacity: 0.6;\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { Container } from './styles';\n\nimport Logo from '../../assets/logo.svg';\n\ninterface HeaderProps {\n  size?: 'small' | 'large';\n}\n\nconst Header: React.FC<HeaderProps> = ({ size = 'large' }: HeaderProps) => (\n  <Container size={size}>\n    <header>\n      <img src={Logo} alt=\"GoFinances\" />\n      <nav>\n        {\n         <div>\n           <Link to=\"/\">\n             Listagem\n           </Link>\n           <Link to=\"/import\">\n             Importar\n           </Link>\n         </div>\n        }\n      </nav>\n    </header>\n  </Container>\n);\n\nexport default Header;\n","const formatValue = (value: number): string =>\n  Intl.NumberFormat('pt-br', {\n    style: 'currency',\n    currency: 'BRL'\n  }).format(value);\n\nexport default formatValue;\n","import styled from 'styled-components';\n\ninterface CardProps {\n  total?: boolean;\n}\n\nexport const Container = styled.div`\n  width: 100%;\n  max-width: 1120px;\n  margin: 0 auto;\n  padding: 40px 20px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: #3a3a3a;\n`;\n\nexport const CardContainer = styled.section`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 32px;\n  margin-top: -150px;\n`;\n\nexport const Card = styled.div`\n  background: ${({ total }: CardProps): string => (total ? '#FF872C' : '#fff')};\n  padding: 22px 32px;\n  border-radius: 5px;\n  color: ${({ total }: CardProps): string => (total ? '#fff' : '#363F5F')};\n\n  header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    p {\n      font-size: 16px;\n    }\n  }\n\n  h1 {\n    margin-top: 14px;\n    font-size: 36px;\n    font-weight: normal;\n    line-height: 54px;\n  }\n`;\n\nexport const TableContainer = styled.section`\n  margin-top: 64px;\n\n  table {\n    width: 100%;\n    border-spacing: 0 8px;\n\n    th {\n      color: #969cb3;\n      font-weight: normal;\n      padding: 20px 32px;\n      text-align: left;\n      font-size: 16px;\n      line-height: 24px;\n    }\n\n    td {\n      padding: 20px 32px;\n      border: 0;\n      background: #fff;\n      font-size: 16px;\n      font-weight: normal;\n      color: #969cb3;\n\n      &.title {\n        color: #363f5f;\n      }\n\n      &.income {\n        color: #12a454;\n      }\n\n      &.outcome {\n        color: #e83f5b;\n      }\n    }\n\n    td:first-child {\n      border-radius: 8px 0 0 8px;\n    }\n\n    td:last-child {\n      border-radius: 0 8px 8px 0;\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\n\nimport income from '../../assets/income.svg';\nimport outcome from '../../assets/outcome.svg';\nimport total from '../../assets/total.svg';\n\nimport api from '../../services/api';\n\nimport Header from '../../components/Header';\n\nimport formatValue from '../../utils/formatValue';\n\nimport { Container, CardContainer, Card, TableContainer } from './styles';\n\ninterface Transaction {\n  id: string;\n  title: string;\n  value: number;\n  formattedValue: string;\n  formattedDate: string;\n  type: 'income' | 'outcome';\n  category: { title: string };\n  created_at: Date;\n}\n\ninterface Balance {\n  income: string;\n  outcome: string;\n  total: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [balance, setBalance] = useState<Balance>({} as Balance);\n\n  useEffect(() => {\n    async function loadTransactions(): Promise<void> {\n      api.get('/transactions').then((response) => {\n\n        const transactionFormated = response.data.transactions.map(\n          (transaction: Transaction) => ({\n            ...transaction,\n            formattedValue: formatValue(transaction.value),\n            formattedDate: new Date(transaction.created_at).toLocaleDateString('pt-br')\n          })\n        );\n\n        const balanceFormatted = {\n          income: formatValue(response.data.balance.income),\n          outcome: formatValue(response.data.balance.outcome),\n          total: formatValue(response.data.balance.total),\n        }\n\n        setTransactions(transactionFormated);\n        setBalance(balanceFormatted);\n      })\n    }\n    loadTransactions();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <CardContainer>\n          <Card>\n            <header>\n              <p>Entradas</p>\n              <img src={income} alt=\"Income\" />\n            </header>\n            <h1 data-testid=\"balance-income\">{balance.income}</h1>\n          </Card>\n          <Card>\n            <header>\n              <p>Saídas</p>\n              <img src={outcome} alt=\"Outcome\" />\n            </header>\n            <h1 data-testid=\"balance-outcome\">{balance.outcome}</h1>\n          </Card>\n          <Card total>\n            <header>\n              <p>Total</p>\n              <img src={total} alt=\"Total\" />\n            </header>\n            <h1 data-testid=\"balance-total\">{balance.total}</h1>\n          </Card>\n        </CardContainer>\n\n        <TableContainer>\n          <table>\n            <thead>\n              <tr>\n                <th>Título</th>\n                <th>Preço</th>\n                <th>Categoria</th>\n                <th>Data</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {transactions.map(transaction => (\n                <tr key={transaction.id}>\n                  <td className=\"title\">{transaction.title}</td>\n                  <td className={transaction.type}>\n                    {transaction.type === \"outcome\" ? ' - ' : ''}\n                    {transaction.formattedValue}\n                  </td>\n                  <td>{transaction.category.title}</td>\n                  <td>{transaction.formattedDate}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </TableContainer>\n      </Container>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  margin-top: 20px;\n\n  li {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    color: #444;\n\n    & + li {\n      margin-top: 15px;\n    }\n  }\n`;\n\nexport const FileInfo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex: 1;\n\n  button {\n    border: 0;\n    background: transparent;\n    color: #e83f5b;\n    margin-left: 5px;\n    cursor: pointer;\n  }\n\n  div {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    span {\n      font-size: 12px;\n      color: #999;\n      margin-top: 5px;\n    }\n  }\n`;\n","import React from 'react';\n\nimport { Container, FileInfo } from './styles';\n\ninterface FileProps {\n  name: string;\n  readableSize: string;\n}\n\ninterface FileListProps {\n  files: FileProps[];\n}\n\nconst FileList: React.FC<FileListProps> = ({ files }: FileListProps) => {\n  return (\n    <Container>\n      {files.map((uploadedFile) => (\n        <li key={uploadedFile.name}>\n          <FileInfo>\n            <div>\n              <strong>{uploadedFile.name}</strong>\n              <span>{uploadedFile.readableSize}</span>\n            </div>\n          </FileInfo>\n        </li>\n      ))}\n    </Container>\n  );\n};\n\nexport default FileList;\n","import styled, { css, FlattenSimpleInterpolation } from 'styled-components';\n\ninterface UploadProps {\n  isDragActive: boolean;\n  isDragReject: boolean;\n  refKey?: string;\n  [key: string]: any;\n  type?: 'error' | 'success' | 'default';\n}\n\nconst dragActive = css`\n  border-color: #12a454;\n`;\n\nconst dragReject = css`\n  border-color: #e83f5b;\n`;\n\nexport const DropContainer = styled.div.attrs({\n  className: 'dropzone',\n})`\n  border: 1.5px dashed #969cb3;\n  border-radius: 5px;\n  cursor: pointer;\n\n  transition: height 0.2s ease;\n\n  ${(props: UploadProps): false | FlattenSimpleInterpolation =>\n    props.isDragActive && dragActive}\n\n  ${(props: UploadProps): false | FlattenSimpleInterpolation =>\n    props.isDragReject && dragReject}\n`;\n\nconst messageColors = {\n  default: '#5636D3',\n  error: '#e83f5b',\n  success: '#12a454',\n};\n\nexport const UploadMessage = styled.p`\n  display: flex;\n  font-size: 16px;\n  line-height: 24px;\n  padding: 48px 0;\n\n  color: ${({ type }: UploadProps) => messageColors[type || 'default']};\n\n  justify-content: center;\n  align-items: center;\n`;\n","import React, { ReactNode } from 'react';\n\nimport Dropzone from 'react-dropzone';\nimport { DropContainer, UploadMessage } from './styles';\n\ninterface UploadProps {\n  onUpload: Function;\n}\n\nconst Upload: React.FC<UploadProps> = ({ onUpload }: UploadProps) => {\n  function renderDragMessage(\n    isDragActive: boolean,\n    isDragRejest: boolean,\n  ): ReactNode {\n    if (!isDragActive) {\n      return (\n        <UploadMessage>Selecione ou arraste o arquivo aqui.</UploadMessage>\n      );\n    }\n\n    if (isDragRejest) {\n      return <UploadMessage type=\"error\">Arquivo não suportado</UploadMessage>;\n    }\n\n    return <UploadMessage type=\"success\">Solte o arquivo aqui</UploadMessage>;\n  }\n\n  return (\n    <>\n      <Dropzone accept=\".csv, application/vnd.ms-excel, text/csv\" onDropAccepted={(files) => onUpload(files)}>\n        {({ getRootProps, getInputProps, isDragActive, isDragReject }): any => (\n          <DropContainer\n            {...getRootProps()}\n            isDragActive={isDragActive}\n            isDragReject={isDragReject}\n          >\n            <input {...getInputProps()} data-testid=\"upload\" />\n            {renderDragMessage(isDragActive, isDragReject)}\n          </DropContainer>\n        )}\n      </Dropzone>\n    </>\n  );\n};\n\nexport default Upload;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Container = styled.div`\n  width: 100%;\n  max-width: 736px;\n  margin: 0 auto;\n  padding: 40px 20px;\n`;\n\nexport const Title = styled.h1`\n  font-weight: 500;\n  font-size: 36px;\n  line-height: 54px;\n  color: #363f5f;\n  text-align: center;\n`;\n\nexport const ImportFileContainer = styled.section`\n  background: #fff;\n  margin-top: 40px;\n  border-radius: 5px;\n  padding: 64px;\n`;\n\nexport const Footer = styled.section`\n  margin-top: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  p {\n    display: flex;\n    align-items: center;\n    font-size: 12px;\n    line-height: 18px;\n    color: #969cb3;\n\n    img {\n      margin-right: 5px;\n    }\n  }\n\n  button {\n    background: #ff872c;\n    color: #fff;\n    border-radius: 5px;\n    padding: 15px 80px;\n    border: 0;\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#ff872c')};\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport filesize from 'filesize';\n\nimport Header from '../../components/Header';\nimport FileList from '../../components/FileList';\nimport Upload from '../../components/Upload';\n\nimport { Container, Title, ImportFileContainer, Footer } from './styles';\n\nimport alert from '../../assets/alert.svg';\nimport api from '../../services/api';\n\ninterface FileProps {\n  file: File;\n  name: string;\n  readableSize: string;\n}\n\nconst Import: React.FC = () => {\n  const [uploadedFiles, setUploadedFiles] = useState<FileProps[]>([]);\n  const history = useHistory();\n\n  async function handleUpload(): Promise<void> {\n    const data = new FormData();\n\n    if (!uploadedFiles.length) return;\n    const file = uploadedFiles[0]\n    data.append('file', file.file, file.name);\n\n    try {\n      await api.post('/transactions/import', data);\n      history.push('/');\n    } catch (err) {\n      console.log(err.response.error);\n    }\n  }\n\n  function submitFile(files: File[]): void {\n    const uploadFiles = files.map(file => ({\n      file,\n      name: file.name,\n      readableSize: filesize(file.size)\n    }));\n\n    setUploadedFiles(uploadFiles);\n  }\n\n  return (\n    <>\n      <Header size=\"small\" />\n      <Container>\n        <Title>Importar uma transação</Title>\n        <ImportFileContainer>\n          <Upload onUpload={submitFile} />\n          {!!uploadedFiles.length && <FileList files={uploadedFiles} />}\n\n          <Footer>\n            <p>\n              <img src={alert} alt=\"Alert\" />\n              Permitido apenas arquivos CSV\n            </p>\n            <button onClick={handleUpload} type=\"button\">\n              Enviar\n            </button>\n          </Footer>\n        </ImportFileContainer>\n      </Container>\n    </>\n  );\n};\n\nexport default Import;\n","import React from 'react';\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport Dashboard from '../pages/Dashboard';\nimport Import from '../pages/Import';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Dashboard} />\n    <Route path=\"/import\" component={Import} />\n  </Switch>\n);\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #F0F2F5 ;\n    -webkit-font-smoothing: antialiased\n  }\n\n  body, input, button {\n    font: 16px \"Poppins\", sans-serif;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Routes from './routes';\n\nimport GlobalStyle from './styles/global';\n\nconst App: React.FC = () => (\n  <>\n    <GlobalStyle />\n    <Router>\n      <Routes />\n    </Router>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}